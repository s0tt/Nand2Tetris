// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:

    Mux16(a=false, b=false, sel=reset, out=outReset);
    Not(in=reset, out=notReset);
    And(a=notReset, b=load, out=nRL);
    Mux16(a=outReset, b=in, sel=nRL, out=outLoad);
    Not(in=load, out=nL); 
    And(a=notReset, b=nL, out=nRnL);
    And(a=nRnL, b=inc, out=nRnLI);
    Mux16(a=outLoad, b=outFinalInc, sel=nRnLI, out=outInc);
    Or(a=load, b=reset, out=RvL);
    Or(a=RvL, b=inc, out=RvLvI);
    Register(in=outInc, load=RvLvI, out=out, out=outFinal);
    Inc16(in=outFinal, out=outFinalInc);
}
